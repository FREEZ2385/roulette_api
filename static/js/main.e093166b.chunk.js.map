{"version":3,"sources":["logo.svg","Component/organism/Roulette.js","Component/organism/EntryList.js","Component/organism/InputText.js","App.js","reportWebVitals.js","index.js"],"names":["Roulette","props","rouletteClick","setRouletteClick","rouletteData","className","mustStartSpinning","onStopSpinning","prizeNumber","Math","floor","random","length","data","backgroundColors","innerRadius","outerBorderWidth","outerBorderColor","innerBorderWidth","innerBorderColor","radiusLineWidth","textColors","Button","style","marginBottom","width","position","left","top","height","onClick","variant","color","EntryList","deleteRouletteData","shuffleRouletteData","useState","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","display","marginLeft","marginTop","map","index","option","marginRight","startIcon","InputText","entryName","addEntryName","addRouletteData","TextField","label","value","onChange","e","target","backgroundColor","onKeyPress","ev","key","float","App","setRouletteData","useCookies","cookies","setCookie","useEffect","textAlign","fontSize","packageJson","version","text","name","expires","Date","now","concat","borderTop","mexpires","dataList","splice","shuffledList","a","i","j","shuffle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e093166b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { Button } from \"@material-ui/core\";\nimport \"./scss/Roulette.scss\";\n\nexport const Roulette = ({ ...props }) => {\n  const { rouletteClick, setRouletteClick, rouletteData } = props;\n\n  return (\n    <div className=\"roulette\">\n      <Wheel\n        mustStartSpinning={rouletteClick}\n        onStopSpinning={() => setRouletteClick(false)}\n        prizeNumber={Math.floor(Math.random() * rouletteData.length)}\n        data={rouletteData}\n        backgroundColors={[\"#386fa4\", \"#84d2f6\"]}\n        innerRadius={20}\n        outerBorderWidth={2}\n        outerBorderColor=\"#999999\"\n        innerBorderWidth={2}\n        innerBorderColor=\"#DDDDDD\"\n        radiusLineWidth={rouletteData.length === 1 ? 0 : 1}\n        textColors={[\"#ffffff\"]}\n      />\n      <Button\n        style={{\n          marginBottom: 50,\n          width: \"30%\",\n          position: \"absolute\",\n          left: \"calc(13vw)\",\n          top: \"calc(26vh)\",\n          height: \"30%\",\n        }}\n        onClick={() => setRouletteClick(true)}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        回る\n        <br />\n        Roll\n      </Button>\n    </div>\n  );\n};\n\n// ButtonComponent.PropTypes = {\n//   text: PropTypes.string,\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   onClick: PropTypes.func,\n// };\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./scss/EntryList.scss\";\n\nexport const EntryList = ({ ...props }) => {\n  const { rouletteData, deleteRouletteData, shuffleRouletteData } = props;\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"entry-list\">\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          エントリー順番変更完了\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            エントリーの順番を変わりました。エントリーリストを改めてご確認してください。\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <div style={{ display: \"flex\" }}>\n        <p className=\"title-text\">エントリー一覧</p>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{\n            marginLeft: 15,\n            width: 150,\n            height: 32,\n            marginTop: \"auto\",\n            marginBottom: \"auto\",\n          }}\n          onClick={() => {\n            shuffleRouletteData();\n            setOpen(true);\n          }}\n        >\n          順番を変わる\n        </Button>\n      </div>\n      <div className=\"button-list\">\n        {rouletteData.map((data, index) => {\n          if (data.option !== \"\")\n            return (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginRight: 15, marginBottom: 15 }}\n                onClick={() => deleteRouletteData(index)}\n                startIcon={<CloseIcon />}\n              >\n                {data.option}\n              </Button>\n            );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// ButtonComponent.PropTypes = {\n//   text: PropTypes.string,\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   onClick: PropTypes.func,\n// };\n","import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./scss/InputText.scss\";\n\nexport const InputText = ({ ...props }) => {\n  const {\n    rouletteData,\n    entryName,\n    addEntryName,\n    addRouletteData,\n  } = props;\n\n  return (\n    <div className=\"input-text\">\n      <div>\n        <p className=\"title-text\">エントリー入力</p>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"名前(name)\"\n          variant=\"outlined\"\n          value={entryName}\n          onChange={(e) => addEntryName(e.target.value)}\n          style={{\n            backgroundColor: \"white\",\n            width: \"100%\",\n          }}\n          onKeyPress={(ev) => {\n            if (ev.key === \"Enter\") {\n              // Do code here\n              if (entryName !== \"\") addRouletteData(entryName);\n            }\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 10, width: 100, float: \"right\" }}\n          onClick={() => {\n            if (entryName !== \"\") addRouletteData(entryName);\n          }}\n        >\n          追加\n        </Button>\n        \n      </div>\n    </div>\n  );\n};\n\n// ButtonComponent.PropTypes = {\n//   text: PropTypes.string,\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   onClick: PropTypes.func,\n// };\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Roulette } from \"./Component/organism/Roulette\";\nimport { EntryList } from \"./Component/organism/EntryList\";\nimport { InputText } from \"./Component/organism/InputText\";\nimport packageJson from \"../package.json\";\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction App() {\n  const [rouletteClick, setRouletteClick] = useState(false);\n  const [rouletteData, setRouletteData] = useState([{ option: \"\" }]);\n  const [cookies, setCookie, removeCookie] = useCookies([\"rouletteData\"]);\n  const [entryName, addEntryName] = useState(\"\");\n\n  useEffect(() => {\n    if (cookies.rouletteData) setRouletteData(cookies.rouletteData);\n  }, []);\n\n  const addRouletteData = (name) => {\n    if (rouletteData.length === 1 && rouletteData[0].option === \"\") {\n      setRouletteData([{ option: name }]);\n      setCookie(\"rouletteData\", [{ option: name }], {\n        expires: new Date(Date.now() + 2592000),\n      });\n    } else {\n      setRouletteData(rouletteData.concat({ option: name }));\n      setCookie(\"rouletteData\", rouletteData.concat({ option: name }), {\n        expires: new Date(Date.now() + 2592000),\n      });\n    }\n    addEntryName(\"\");\n  };\n\n  const deleteRouletteData = (index) => {\n    if (rouletteData.length == 1) {\n      setRouletteData([{ option: \"\" }]);\n      setCookie(\"rouletteData\", [{ option: \"\" }], {\n        mexpires: new Date(Date.now() + 2592000),\n      });\n    } else {\n      const dataList = [...rouletteData];\n      dataList.splice(index, 1);\n      setRouletteData(dataList);\n      setCookie(\"rouletteData\", dataList, {\n        expires: new Date(Date.now() + 2592000),\n      });\n    }\n  };\n\n  const shuffleRouletteData = () => {\n    if (rouletteData.length !== 1 && rouletteData[0].option !== \"\") {\n      const dataList = [...rouletteData];\n      const shuffledList = shuffle(dataList);\n      setRouletteData(shuffledList);\n      setCookie(\"rouletteData\", shuffledList, {\n        expires: new Date(Date.now() + 2592000),\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ textAlign: \"center\", fontSize: 24, marginTop: 20 }}>\n        ルーレット＆順番決め <br />\n        Roulette & OrderNumber\n      </div>\n      <p style={{ textAlign: \"right\", color: \"#CCCCCC\", marginRight: 20 }}>\n        Ver {packageJson.version} Developed By Lee Freez\n      </p>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"50%\", marginLeft: 50 }}>\n          <Roulette\n            rouletteClick={rouletteClick}\n            setRouletteClick={setRouletteClick}\n            rouletteData={rouletteData}\n          />\n        </div>\n        <div style={{ width: \"50%\", marginRight: 50, marginLeft: 50 }}>\n          <InputText\n            rouletteData={rouletteData}\n            entryName={entryName}\n            addEntryName={addEntryName}\n            addRouletteData={(text) => addRouletteData(text)}\n          />\n          <hr style={{ borderTop: \"1px solid #cccccc\" }} />\n          <EntryList\n            deleteRouletteData={(index) => deleteRouletteData(index)}\n            rouletteData={rouletteData}\n            shuffleRouletteData={shuffleRouletteData}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}