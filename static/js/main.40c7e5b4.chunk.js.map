{"version":3,"sources":["logo.svg","Component/organism/Roulette.js","Component/organism/EntryList.js","Component/organism/InputText.js","App.js","reportWebVitals.js","index.js"],"names":["Roulette","props","rouletteClick","setRouletteClick","rouletteData","className","mustStartSpinning","onStopSpinning","prizeNumber","Math","floor","random","length","data","backgroundColors","innerRadius","outerBorderWidth","outerBorderColor","innerBorderWidth","innerBorderColor","radiusLineWidth","textColors","Button","style","marginBottom","width","position","left","top","height","onClick","variant","color","EntryList","deleteRouletteData","map","index","option","marginRight","startIcon","InputText","entryName","addEntryName","addRouletteData","shuffleRouletteData","TextField","id","label","value","onChange","e","target","backgroundColor","onKeyPress","ev","key","marginTop","float","App","useState","setRouletteData","useCookies","cookies","setCookie","useEffect","textAlign","fontSize","display","marginLeft","text","name","maxAge","concat","shuffledList","a","i","j","shuffle","borderTop","dataList","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c7e5b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { Button } from \"@material-ui/core\";\nimport \"./scss/Roulette.scss\";\n\nexport const Roulette = ({ ...props }) => {\n  const { rouletteClick, setRouletteClick, rouletteData } = props;\n\n  return (\n    <div className=\"roulette\">\n      <Wheel\n        mustStartSpinning={rouletteClick}\n        onStopSpinning={() => setRouletteClick(false)}\n        prizeNumber={Math.floor(Math.random() * rouletteData.length)}\n        data={rouletteData}\n        backgroundColors={[\"#386fa4\", \"#84d2f6\"]}\n        innerRadius={20}\n        outerBorderWidth={2}\n        outerBorderColor=\"#999999\"\n        innerBorderWidth={2}\n        innerBorderColor=\"#DDDDDD\"\n        radiusLineWidth={rouletteData.length === 1 ? 0 : 1}\n        textColors={[\"#ffffff\"]}\n      />\n      <Button\n        style={{\n          marginBottom: 50,\n          width: \"30%\",\n          position: \"absolute\",\n          left: \"calc(13vw)\",\n          top: \"calc(26vh)\",\n          height: \"30%\",\n        }}\n        onClick={() => setRouletteClick(true)}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        回る\n        <br />\n        Roll\n      </Button>\n    </div>\n  );\n};\n\n// ButtonComponent.PropTypes = {\n//   text: PropTypes.string,\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   onClick: PropTypes.func,\n// };\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./scss/EntryList.scss\";\n\nexport const EntryList = ({ ...props }) => {\n  const { rouletteData, deleteRouletteData } = props;\n\n  return (\n    <div className=\"entry-list\">\n      <p className=\"title-text\">エントリー一覧</p>\n      <div className=\"button-list\">\n        {rouletteData.map((data, index) => {\n          if (data.option !== \"\")\n            return (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginRight: 15, marginBottom: 15 }}\n                onClick={() => deleteRouletteData(index)}\n                startIcon={<CloseIcon />}\n              >\n                {data.option}\n              </Button>\n            );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// ButtonComponent.PropTypes = {\n//   text: PropTypes.string,\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   onClick: PropTypes.func,\n// };\n","import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./scss/InputText.scss\";\n\nexport const InputText = ({ ...props }) => {\n  const {\n    rouletteData,\n    entryName,\n    addEntryName,\n    addRouletteData,\n    shuffleRouletteData,\n  } = props;\n\n  return (\n    <div className=\"input-text\">\n      <div>\n        <p className=\"title-text\">エントリー入力</p>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"名前(name)\"\n          variant=\"outlined\"\n          value={entryName}\n          onChange={(e) => addEntryName(e.target.value)}\n          style={{\n            backgroundColor: \"white\",\n            width: \"100%\",\n          }}\n          onKeyPress={(ev) => {\n            if (ev.key === \"Enter\") {\n              // Do code here\n              if (entryName !== \"\") addRouletteData(entryName);\n            }\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 10, width: 100, float: \"right\" }}\n          onClick={() => {\n            if (entryName !== \"\") addRouletteData(entryName);\n          }}\n        >\n          追加\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 10, width: 130 }}\n          onClick={() => {\n            shuffleRouletteData();\n          }}\n        >\n          順番を変わる\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n// ButtonComponent.PropTypes = {\n//   text: PropTypes.string,\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   onClick: PropTypes.func,\n// };\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Roulette } from \"./Component/organism/Roulette\";\nimport { EntryList } from \"./Component/organism/EntryList\";\nimport { InputText } from \"./Component/organism/InputText\";\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction App() {\n  const [rouletteClick, setRouletteClick] = useState(false);\n  const [rouletteData, setRouletteData] = useState([{ option: \"\" }]);\n  const [cookies, setCookie, removeCookie] = useCookies([\"rouletteData\"]);\n  const [entryName, addEntryName] = useState(\"\");\n\n  useEffect(() => {\n    if (cookies.rouletteData) setRouletteData(cookies.rouletteData);\n  }, []);\n\n  const addRouletteData = (name) => {\n    if (rouletteData.length === 1 && rouletteData[0].option === \"\") {\n      setRouletteData([{ option: name }]);\n      setCookie(\"rouletteData\", [{ option: name }], {\n        maxAge: 2000,\n      });\n    } else {\n      setRouletteData(rouletteData.concat({ option: name }));\n      setCookie(\"rouletteData\", rouletteData.concat({ option: name }), {\n        maxAge: 2000,\n      });\n    }\n    addEntryName(\"\");\n  };\n\n  const deleteRouletteData = (index) => {\n    if (rouletteData.length == 1) {\n      setRouletteData([{ option: \"\" }]);\n      setCookie(\"rouletteData\", [{ option: \"\" }], {\n        maxAge: 2000,\n      });\n    } else {\n      const dataList = [...rouletteData];\n      dataList.splice(index, 1);\n      setRouletteData(dataList);\n      setCookie(\"rouletteData\", dataList, {\n        maxAge: 2000,\n      });\n    }\n  };\n\n  const shuffleRouletteData = () => {\n    if (rouletteData.length !== 1 && rouletteData[0].option !== \"\") {\n      const dataList = [...rouletteData];\n      const shuffledList = shuffle(dataList);\n      setRouletteData(shuffledList);\n      setCookie(\"rouletteData\", shuffledList, {\n        maxAge: 2000,\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ textAlign: \"center\", fontSize: 24, marginTop: 20 }}>\n        ルーレット＆順番決め <br />\n        Roulette & OrderNumber\n      </div>\n      <p style={{ textAlign: \"right\", color: \"#CCCCCC\", marginRight: 20 }}>\n        Ver 0.3 Developed By Lee Freez\n      </p>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"50%\", marginLeft: 50 }}>\n          <Roulette\n            rouletteClick={rouletteClick}\n            setRouletteClick={setRouletteClick}\n            rouletteData={rouletteData}\n          />\n        </div>\n        <div style={{ width: \"50%\", marginRight: 50, marginLeft: 50 }}>\n          <InputText\n            rouletteData={rouletteData}\n            entryName={entryName}\n            addEntryName={addEntryName}\n            addRouletteData={(text) => addRouletteData(text)}\n            shuffleRouletteData={shuffleRouletteData}\n          />\n          <hr style={{ borderTop: \"1px solid #cccccc\" }} />\n          <EntryList\n            deleteRouletteData={(index) => deleteRouletteData(index)}\n            rouletteData={rouletteData}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}