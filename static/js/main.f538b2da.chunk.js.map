{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","rouletteClick","setRouletteClick","option","rouletteData","setRouletteData","useCookies","cookies","setCookie","entryName","addEntryName","useEffect","shuffleRouletteData","length","shuffledList","a","i","j","Math","floor","random","shuffle","maxAge","className","style","textAlign","fontSize","marginTop","color","marginRight","display","width","marginLeft","mustStartSpinning","onStopSpinning","prizeNumber","data","backgroundColors","innerRadius","outerBorderWidth","outerBorderColor","innerBorderWidth","innerBorderColor","radiusLineWidth","textColors","Button","marginBottom","float","onClick","variant","TextField","id","label","value","onChange","e","target","backgroundColor","name","concat","map","index","dataList","splice","deleteRouletteData","startIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f538b2da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Wheel } from \"react-custom-roulette\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction App() {\n  const [rouletteClick, setRouletteClick] = useState(false);\n  const [rouletteData, setRouletteData] = useState([{ option: \"\" }]);\n  const [cookies, setCookie, removeCookie] = useCookies([\"rouletteData\"]);\n  const [entryName, addEntryName] = useState(\"\");\n\n  useEffect(() => {\n    if (cookies.rouletteData) setRouletteData(cookies.rouletteData);\n  }, []);\n\n  const addRouletteData = (name) => {\n    if (rouletteData.length === 1 && rouletteData[0].option === \"\") {\n      setRouletteData([{ option: name }]);\n      setCookie(\"rouletteData\", [{ option: name }], {\n        maxAge: 2000,\n      });\n    } else {\n      setRouletteData(rouletteData.concat({ option: name }));\n      setCookie(\"rouletteData\", rouletteData.concat({ option: name }), {\n        maxAge: 2000,\n      });\n    }\n    addEntryName(\"\");\n  };\n\n  const deleteRouletteData = (index) => {\n    if (rouletteData.length == 1) {\n      setRouletteData([{ option: \"\" }]);\n      setCookie(\"rouletteData\", [{ option: \"\" }], {\n        maxAge: 2000,\n      });\n    } else {\n      const dataList = [...rouletteData];\n      dataList.splice(index, 1);\n      setRouletteData(dataList);\n      setCookie(\"rouletteData\", dataList, {\n        maxAge: 2000,\n      });\n    }\n  };\n\n  const shuffleRouletteData = () => {\n    if (rouletteData.length !== 1 && rouletteData[0].option !== \"\") {\n      const dataList = [...rouletteData];\n      const shuffledList = shuffle(dataList);\n      setRouletteData(shuffledList);\n      setCookie(\"rouletteData\", shuffledList, {\n        maxAge: 2000,\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ textAlign: \"center\", fontSize: 24, marginTop: 20 }}>\n        ルーレット＆順番決め <br />\n        Roulette & OrderNumber\n      </div>\n      <p style={{ textAlign: \"right\", color: \"#CCCCCC\", marginRight: 20 }}>\n        Ver 0.2 Developed By Lee Freez\n      </p>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"50%\", marginLeft: 50 }}>\n          <div className=\"roulette\">\n            <Wheel\n              mustStartSpinning={rouletteClick}\n              onStopSpinning={() => setRouletteClick(false)}\n              prizeNumber={Math.floor(\n                Math.random() * (rouletteData.length - 1)\n              )}\n              data={rouletteData}\n              backgroundColors={[\"#386fa4\", \"#84d2f6\"]}\n              innerRadius={20}\n              outerBorderWidth={2}\n              outerBorderColor=\"#DDDDDD\"\n              innerBorderWidth={2}\n              innerBorderColor=\"#DDDDDD\"\n              radiusLineWidth={rouletteData.length === 1 ? 0 : 1}\n              textColors={[\"#ffffff\"]}\n            />\n          </div>\n          <Button\n            style={{ marginBottom: 50, width: 100, float: \"right\" }}\n            onClick={() => setRouletteClick(true)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            回る\n          </Button>\n        </div>\n        <div style={{ width: \"50%\", marginRight: 50, marginLeft: 50 }}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"名前(name)\"\n            variant=\"outlined\"\n            value={entryName}\n            onChange={(e) => addEntryName(e.target.value)}\n            style={{ backgroundColor: \"white\", width: \"100%\", marginTop: 50 }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: 10, width: 100, float: \"right\" }}\n            onClick={() => {\n              if (entryName !== \"\") addRouletteData(entryName);\n            }}\n          >\n            追加\n          </Button>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginTop: 10, width: 130 }}\n              onClick={() => {\n                shuffleRouletteData();\n              }}\n            >\n              順番を変わる\n            </Button>\n          </div>\n          <div style={{ marginTop: 80 }}>\n            {rouletteData.map((data, index) => {\n              if (data.option !== \"\")\n                return (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => deleteRouletteData(index)}\n                    startIcon={<CloseIcon />}\n                  >\n                    {data.option}\n                  </Button>\n                );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}